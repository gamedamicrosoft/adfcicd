trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      - group: AZURE-CLI
  - ${{ if eq(variables['Build.SourceBranchName'], 'qa') }}:
      - group: AZURE-CLI-QA


stages:
  - stage: Deploy_Databricks_Notebooks
    displayName: "Deploy Notebooks to Databricks"
    jobs:
      - job: DeployNotebooks
        displayName: "Deploy Notebooks"
        pool:
          vmImage: ubuntu-latest

        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
            displayName: "Setup Python Environment"

          - script: |
              python -m pip install --upgrade pip
              pip install databricks-cli
            displayName: "Install Databricks CLI"

          - script: |
              echo "Configuring Databricks CLI..."
              mkdir -p ~/.databricks
              echo "[DEFAULT]" > ~/.databrickscfg
              echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
              echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg
              
              #echo "Validating the .databrickscfg file contents (host only):"
              #cat  ~/.databrickscfg
            displayName: "Configure Databricks CLI"
            env:
              DATABRICKS_HOST: "https://$(DATABRICKS_URL)"
              DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)

          #- script: |
          #    echo "Debugging Token Length:"
          #    echo "Token length: ${#DATABRICKS_TOKEN}"
          #  displayName: "Check Token Length"
          #  env:
          #    DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)

          - script: |
              echo "Testing Databricks CLI..."
              databricks workspace import_dir "${LOCAL_NOTEBOOKS_DIR}" "${DATABRICKS_WORKSPACE_DIR}" --overwrite
            displayName: "Run Databricks Deployment Script"
            env:
              LOCAL_NOTEBOOKS_DIR: "$(Build.SourcesDirectory)/databricks/notebooks"
              DATABRICKS_HOST: "https://$(DATABRICKS_URL)"  # Set in Azure DevOps as secret
              DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
  - stage: Deploy_ADF
    displayName: 'Deploy Azure Data Factory Assets'
    jobs:
      - job: DeployADF
        displayName: 'Run ADF Deployment Script'
        pool:
          vmImage: ubuntu-latest

        steps:
          - script: |
              echo "Environment Variables:"
              printenv | grep -E 'RESOURCE_GROUP|ADF_NAME|KEYVAULT_BASEURL'
            displayName: "Debug Environment Variables"
          - script: |
              echo "Debug: Checking environment variables..."
              printenv | grep 'KEYVAULT_BASEURL'

              echo "Debug: Listing files in linkedServices folder..."
              ls -l $(System.DefaultWorkingDirectory)/adf/linkedServices

              echo "Debug: Contents of a sample JSON file:"
              cat $(System.DefaultWorkingDirectory)/adf/linkedServices/0_AzureKeyVault1.json
            displayName: "Debug JSON and Environment Variables"
          - script: |
              sudo apt-get update
              sudo apt-get install -y jq
              jq --version
            displayName: "Install and Verify jq"
          - script: |
              echo "Debug: Checking environment variables..."
              printenv | grep 'KEYVAULT_BASEURL'

              echo "Debug: Listing files in linkedServices folder..."
              ls -l $(System.DefaultWorkingDirectory)/adf/linkedServices

              echo "Debug: Contents of a sample JSON file:"
              cat $(System.DefaultWorkingDirectory)/adf/linkedServices/0_AzureKeyVault1.json
            displayName: "Debug JSON and Environment Variables"
          - script: |
              chmod +x ./scripts/deploy-adf.sh
              ./scripts/deploy-adf.sh
            displayName: 'Run deploy-adf.sh'
            env:
              RESOURCE_GROUP: $(RESOURCE_GROUP)
              ADF_NAME: $(ADF_NAME)
              ASSETS_DIR: '$(System.DefaultWorkingDirectory)/adf'
              AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
              AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
              AZURE_TENANT_ID: $(AZURE_TENANT_ID)
              AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
              KEYVAULT_BASEURL: $(KEYVAULT_BASEURL)
              DATABRICKS_URL: $(DATABRICKS_URL)
              DATABRICKS_CLUSTER_ID: $(DATABRICKS_CLUSTER_ID)